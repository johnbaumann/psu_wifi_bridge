/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_SIOPAYLOAD_PB_H_INCLUDED
#define PB_SIOPAYLOAD_PB_H_INCLUDED
#include "pb.h"
#include "sys/types.h"
#include "dirent.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _DataTransfer { 
    pb_byte_t data[1]; 
} DataTransfer;

typedef struct _FlowControl { 
    bool dxr; 
    bool xts; 
} FlowControl;

typedef struct _SIOPayload { 
    bool has_data_transfer;
    DataTransfer data_transfer; 
    bool has_flow_control;
    FlowControl flow_control; 
} SIOPayload;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define FlowControl_init_default                 {0, 0}
#define DataTransfer_init_default                {{0}}
#define SIOPayload_init_default                  {false, DataTransfer_init_default, false, FlowControl_init_default}
#define FlowControl_init_zero                    {0, 0}
#define DataTransfer_init_zero                   {{0}}
#define SIOPayload_init_zero                     {false, DataTransfer_init_zero, false, FlowControl_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define DataTransfer_data_tag                    1
#define FlowControl_dxr_tag                      1
#define FlowControl_xts_tag                      2
#define SIOPayload_data_transfer_tag             1
#define SIOPayload_flow_control_tag              2

/* Struct field encoding specification for nanopb */
#define FlowControl_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     dxr,               1) \
X(a, STATIC,   SINGULAR, BOOL,     xts,               2)
#define FlowControl_CALLBACK NULL
#define FlowControl_DEFAULT NULL

#define DataTransfer_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, data,              1)
#define DataTransfer_CALLBACK NULL
#define DataTransfer_DEFAULT NULL

#define SIOPayload_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  data_transfer,     1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  flow_control,      2)
#define SIOPayload_CALLBACK NULL
#define SIOPayload_DEFAULT NULL
#define SIOPayload_data_transfer_MSGTYPE DataTransfer
#define SIOPayload_flow_control_MSGTYPE FlowControl

extern const pb_msgdesc_t FlowControl_msg;
extern const pb_msgdesc_t DataTransfer_msg;
extern const pb_msgdesc_t SIOPayload_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define FlowControl_fields &FlowControl_msg
#define DataTransfer_fields &DataTransfer_msg
#define SIOPayload_fields &SIOPayload_msg

/* Maximum encoded size of messages (where known) */
#define DataTransfer_size                        3
#define FlowControl_size                         4
#define SIOPayload_size                          11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
